{"version":3,"sources":["components/FullPage.js","components/Scroll.js","components/Arrow.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillsSection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","children","this","props","react_default","a","createElement","className","concat","Component","Scroll","modules","activeClass","to","spy","smooth","offset","duration","delay","Arrow","Scroll_Scroll","onClick","src","icon","TitleSection","FullPage_FullPage","style","fontSize","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","Arrow_Arrow","icons","arrow_down","name","AboutSection","sections","items","contents","SkillCard","item","image","SkillsSection","SkillCard_SkillCard","arrow_up","Navigation","nav_items","changeTheme","change_theme","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentTheme","bind","assertThisInitialized","setState","backgroundColor","themes","background_color","color","lib_default","snowColor","Navigation_Navigation","TitleSection_TitleSection","AboutSection_AboutSection","SkillsSection_SkillsSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aac43a4c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './FullPage.css'\n\nexport default class FullPage extends Component {\n    render(){\n        const { children } = this.props;\n        return (\n         <div className={`fullpage ${this.props.className || ''}`}>\n             {children}\n         </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-scroll';\n\nexport default class Scroll extends Component {\n\n    render(){\n        const { children } = this.props;\n        return (\n            <Link\n                activeClass=\"active\"\n                to={this.props.to}\n                spy={true}\n                smooth={true}\n                offset={50}\n                duration={500}\n                delay={0}>\n                {children}\n            </Link>\n        )\n    }\n\n}","import React, {Component} from 'react';\n// import {Link} from 'react-scroll';\nimport Scroll from '../components/Scroll';\n\nimport './Arrow.css';\n\nexport default class Arrow extends Component {\n\n    render(){\n        return (\n            <Scroll to={this.props.to}>\n                <div onClick={this.props.onClick} className=\"arrow bounce\">\n                    <div>\n                        <img src={this.props.icon}/>\n                    </div>\n                </div>\n            </Scroll>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport FullPage from '../components/FullPage';\nimport Arrow from '../components/Arrow';\nimport {Element} from 'react-scroll'\n\nimport data from '../data.json';\n\nimport './TitleSection.css'\n\nexport default class TitleSection extends Component {\n    render(){\n        return (\n            <div>\n                <FullPage>\n                    <h1 className=\"title\" style={{\n                        fontSize: \"3em\"\n                    }}>\n                        {data.title}\n                    </h1>\n                    <h3 className=\"subtitle\">\n                        {data.subtitle}\n                    </h3>\n                    <div className=\"icons-wrapper\">\n                        {\n                            Object.keys(data.links).map(key => {\n                                return (\n                                    <div className=\"icon\">\n                                        <SocialIcon url={data.links[key]}\n                                        />\n                                    </div>)\n                            })\n                        }\n                    </div>\n                </FullPage>\n                <Arrow icon={data.icons.arrow_down} to=\"about\"/>\n                <Element name=\"about\" className=\"element\"></Element>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport FullPage from '../components/FullPage';\nimport Arrow from '../components/Arrow';\nimport {Element} from 'react-scroll'\n\nimport data from '../data.json';\n\nimport './AboutSection.css';\n\nexport default class AboutSection extends Component {\n    render(){\n        return (\n            <div>\n                <FullPage>\n                    <h1 style={{\n                        fontSize: \"3em\"\n                    }}>\n                        {data.sections[0].title}\n                    </h1>\n                    <p className=\"paragraph\">\n                        {data.sections[0].items[0].contents}\n                    </p>\n                </FullPage>\n                <Arrow icon={data.icons.arrow_down} to=\"skills\"/>\n                <Element name=\"skills\" className=\"element\"></Element>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './SkillsCard.css'\n\n\nexport default class SkillCard extends Component {\n    render(){\n        const { item } = this.props;\n        return (\n            <div className=\"card\">\n                <img className=\"card-image\" src={item.contents.image}/>\n                <div className=\"card-title\">\n                    <h3>\n                        {item.contents.title}\n                    </h3>\n                </div>\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\n\nimport FullPage from '../components/FullPage'\nimport SkillCard from '../components/SkillCard';\nimport Arrow from '../components/Arrow'\n\nimport data from '../data.json';\n\nimport './SkillsSection.css';\n\nexport default class SkillsSection extends Component {\n    render(){\n        return (\n            <div>\n                <FullPage>\n                    <h1 style={{\n                        fontSize: \"3em\"\n                    }}>\n                        {data.sections[1].title}\n                    </h1>\n                    <div className=\"card-wrapper\">\n                        {\n                            data.sections[1].items.map(item => {\n                                return (\n                                <SkillCard item={item}/>\n                            )})\n                        }\n\n                    </div>\n                </FullPage>\n                <Arrow icon={data.icons.arrow_up} to=\"title\"/>\n\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Element} from 'react-scroll';\n\nimport data from '../data.json'\n\nimport './Navigation.css'\nimport Scroll from \"./Scroll\";\n\nexport default class Navigation extends Component {\n\n    render(){\n        return (\n            <div>\n                <ul className=\"navigation\">\n                    {\n                        data.nav_items.links.map( (item) => {\n                            return (\n                              <li className=\"nav-link\">\n                                  <Scroll to={item.to}>\n                                      <a>{item.title}</a>\n                                  </Scroll>\n                              </li>\n                            )}\n                        )\n                    }\n                    {\n                        <li className=\"change-theme\" onClick={this.props.changeTheme}>\n                            <img src={data.nav_items.change_theme.icon}/>\n                        </li>\n                    }\n                </ul>\n                <Element name=\"title\" className=\"element\"></Element>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport TitleSection from './sections/TitleSection'\nimport AboutSection from './sections/AboutSection'\nimport SkillsSection from './sections/SkillsSection'\nimport Navigation from './components/Navigation'\nimport SnowStorm from 'react-snowstorm'\n\nimport './App.css';\n\nimport data from './data';\n\nclass App extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            currentTheme: 0,\n        }\n        this.changeTheme = this.changeTheme.bind(this);\n    }\n\n    changeTheme(){\n        this.setState({\n            currentTheme: this.state.currentTheme < 2 ? this.state.currentTheme+1 : 0\n        });\n    }\n\n    render() {\n        return (\n            <div style={{\n                backgroundColor: data.themes[this.state.currentTheme].background_color,\n                color: data.themes[this.state.currentTheme].color\n            }}>\n                <SnowStorm\n                    snowColor={data.themes[this.state.currentTheme].color}\n                    // followMouse=\"false\"\n                />\n                <Navigation changeTheme={this.changeTheme}/>\n                <TitleSection/>\n                <AboutSection/>\n                <SkillsSection/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}